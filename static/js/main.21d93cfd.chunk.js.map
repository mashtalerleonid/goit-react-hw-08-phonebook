{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","service/phonebook-api.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","components/Filter/Filter.jsx","components/Contacts/ContactListItem/ContactListItem.styled.jsx","components/Contacts/ContactListItem/ContactListItem.jsx","components/Contacts/ContactList/ContactList.styled.jsx","components/Contacts/ContactList/ContactList.jsx","App.styled.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["Form","styled","form","Label","label","phonebookApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","addContact","mutation","query","newContact","url","method","body","invalidatesTags","deleteContact","id","getAllContacts","providesTags","useAddContactMutation","useDeleteContactMutation","useGetAllContactsQuery","ContactForm","useState","name","setName","number","setNumber","items","useSelector","state","phonebook","queries","data","handleChange","e","target","value","onSubmit","preventDefault","isAdded","contact","forEach","item","alert","onChange","autoComplete","type","pattern","title","required","Input","input","filterChange","createAction","getFilter","filterReducer","Filter","filter","dispatch","useDispatch","event","actions","Item","li","props","index","ContactListItem","isLoading","onClick","List","ul","ContactList","filteredData","error","isError","isSuccess","toLowerCase","includes","map","Container","div","App","createReducer","_","action","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21d93cfd.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  width: 350px;\n  padding: 5px;\n  border: 2px solid black;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 60%;\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const phonebookApi = createApi({\n  reducerPath: \"phonebook\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:3001\" }),\n\n  tagTypes: [\"Contacts\"],\n\n  endpoints: (builder) => ({\n    addContact: builder.mutation({\n      query: (newContact) => ({\n        url: \"/contacts\",\n        method: \"POST\",\n        body: newContact,\n      }),\n      invalidatesTags: [\"Contacts\"],\n    }),\n\n    deleteContact: builder.mutation({\n      query: (id) => ({\n        url: `/contacts/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"Contacts\"],\n    }),\n\n    getAllContacts: builder.query({\n      query: () => \"/contacts\",\n      providesTags: [\"Contacts\"],\n    }),\n  }),\n});\n\nexport const {\n  useAddContactMutation,\n  useDeleteContactMutation,\n  useGetAllContactsQuery,\n} = phonebookApi;\n\n// axios.defaults.baseURL = \"http://localhost:3001\";\n\n// export async function fetchContacts() {\n//   const { data } = await axios.get(\"/contacts\");\n//   return data;\n// }\n\n// export async function delContact(id) {\n//   await axios.delete(`/contacts/${id}`);\n// }\n\n// export async function addContact(contact) {\n//   await axios.post(\"/contacts\", contact);\n// }\n","import React from \"react\";\nimport { Form, Label } from \"./ContactForm.styled\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { useAddContactMutation } from \"service/phonebook-api\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [addContact] = useAddContactMutation();\n\n  const items = useSelector((state) =>\n    state.phonebook.queries[\"getAllContacts(undefined)\"]\n      ? state.phonebook.queries[\"getAllContacts(undefined)\"].data\n      : []\n  );\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let isAdded = false;\n    const contact = { name, number };\n\n    if (items) {\n      items.forEach((item) => {\n        if (item.name === name) {\n          isAdded = true;\n          return;\n        }\n      });\n    }\n\n    if (isAdded) {\n      alert(`${name} is already in contacts`);\n    } else {\n      // await dispatch(phonebookOperations.addContact(contact));\n      // await dispatch(phonebookOperations.fetchContacts(contact));\n      addContact(contact);\n      reset();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          value={name}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n\n      <Label>\n        Number\n        <input\n          value={number}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n}\n\n// import {\n//   phonebookOperations,\n//   phonebookActions,\n//   phonebookSelectors,\n// } from \"redux/phonebook\";\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  margin-left: 5px;\n`;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const filterChange = createAction(\"phonebook/filterChange\");\n\n// export const deleteContact = createAction(\"phonebook/deleteContact\");\n\n// export const addContact = createAction(\n//   \"phonebook/addContact\"\n//   // ({ name, number }) => ({\n//   //   payload: { id: uuidv4(), name, number },\n//   // })\n// );\n\n// ---------------------- без toolkit\n\n// export const addContact = ({ name, number }) => ({\n//   type: actionTypes.ADD_CONTACT,\n//   payload: { id: uuidv4(), name, number },\n// });\n\n// export const deleteContact = (contactId) => ({\n//   type: actionTypes.DELETE_CONTACT,\n//   payload: contactId,\n// });\n\n// export const filterChange = (text) => ({\n//   type: actionTypes.FILTER_CHANGE,\n//   payload: text,\n// });\n\n// export const filterBlur = (text) => ({\n//   type: actionTypes.FILTER_BLUR,\n//   payload: text,\n// });\n","export const getFilter = (state) => state.filterReducer;\n\n// export const getItems = (state) => {\n//   return state.items;\n// };\n\n// export const getFilteredItems = (state) => {\n//   const items = getItems(state);\n//   const filter = getFilter(state);\n//   return items.filter((item) =>\n//     item.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n// };\n","import { Label, Input } from \"./Filter.styled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"redux/phonebook/phonebook-actions\";\nimport { getFilter } from \"redux/phonebook/phonebook-selectors\";\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onFilterChange = (event) =>\n    dispatch(actions.filterChange(event.target.value));\n\n  return (\n    <Label>\n      Find contacts by name:\n      <Input value={filter} onChange={onFilterChange} />\n    </Label>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  padding: 5px;\n  width: 450px;\n  font-size: 20px;\n  border: 2px solid tomato;\n  border-radius: 5px;\n  box-shadow: 0px 2px 3px 3px rgba(34, 60, 80, 0.4);\n  transition: transform 200ms linear;\n  cursor: pointer;\n\n  ${(props) => {\n    if (props.index % 2 === 0) {\n      return \"background-color:#dee2f0; margin-left:-10px;\";\n    }\n    return \"background-color:#9b9ea8; margin-left:10px;\";\n  }}\n\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n","import { Item } from \"./ContactListItem.styled\";\n\nimport { useDeleteContactMutation } from \"service/phonebook-api\";\n\nfunction ContactListItem({ item, index }) {\n  const { id, name, number } = item;\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  return (\n    <Item index={index}>\n      {name}: {number}\n      <button type=\"button\" onClick={() => deleteContact(id)}>\n        {isLoading ? \"Deleting...\" : \"Delete\"}\n      </button>\n    </Item>\n  );\n}\n\nexport default ContactListItem;\n\n// const onDeleteContact = async (id) => {\n//   dispatch(phonebookActions.deleteContact(id));\n// };\n","import styled from \"@emotion/styled\";\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n","import ContactListItem from \"components/Contacts/ContactListItem/\";\nimport { List } from \"./ContactList.styled\";\nimport { useSelector } from \"react-redux\";\nimport { getFilter } from \"redux/phonebook/phonebook-selectors\";\nimport { useGetAllContactsQuery } from \"service/phonebook-api\";\n\nexport default function ContactList() {\n  const filter = useSelector(getFilter);\n\n  let filteredData = [];\n\n  const { data, error, isError, isSuccess } = useGetAllContactsQuery();\n\n  if (isSuccess) {\n    filteredData = data.filter((item) =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n\n  return (\n    <>\n      {filteredData && (\n        <List>\n          {filteredData.map((item, index) => {\n            return <ContactListItem key={item.id} item={item} index={index} />;\n          })}\n        </List>\n      )}\n\n      {/* {isFetching && <p>Loading...</p>} */}\n\n      {isError && <p>{error.data}</p>}\n    </>\n  );\n}\n\n// const items = useSelector(phonebookSelectors.getFilteredItems);\n// useEffect(() => dispatch(phonebookOperations.fetchContacts()), [dispatch]);\n","import styled from \"@emotion/styled\";\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import ContactForm from \"components/ContactForm\";\nimport Filter from \"components/Filter\";\nimport ContactList from \"components/Contacts/ContactList\";\nimport { Container } from \"./App.styled\";\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"../phonebook/phonebook-actions\";\n\nexport const filterReducer = createReducer(\"\", {\n  [actions.filterChange]: (_, action) => action.payload,\n});\n\n// ------------------------ без toolkit\n\n// const filterReducer = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case types.FILTER_CHANGE:\n//       return payload;\n\n//     case types.FILTER_BLUR:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const itemsReducer = (state = initialItems, { type, payload }) => {\n//   switch (type) {\n//     case types.ADD_CONTACT:\n//       let isAdded = false;\n\n//       state.forEach((item) => {\n//         if (item.name === payload.name) {\n//           isAdded = true;\n//           return;\n//         }\n//       });\n\n//       if (isAdded) {\n//         alert(`${payload.name} is already in contacts`);\n//         return state;\n//       }\n\n//       return [...state, payload];\n\n//     case types.DELETE_CONTACT:\n//       return state.filter((item) => item.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// ---------------------------------\n\n// const itemsReducer = createReducer([], {\n//   [actions.addContact]: (state, action) => {\n//     let isAdded = false;\n//     state.forEach((item) => {\n//       if (item.name === action.payload.name) {\n//         isAdded = true;\n//         return;\n//       }\n//     });\n//     if (isAdded) {\n//       alert(`${action.payload.name} is already in contacts`);\n//       return state;\n//     }\n//     return [...state, action.payload];\n//   },\n//\n//   [actions.deleteContact]: (state, action) =>\n//     state.filter((item) => item.id !== action.payload),\n//\n//   [fetchContacts.fulfilled]: (_, action) => action.payload,\n// });\n\n// const isLoadingReducer = createReducer(false, {\n//   [fetchContacts.pending]: () => true,\n//   [fetchContacts.fulfilled]: () => false,\n//   [fetchContacts.rejected]: () => false,\n// });\n\n// const errorReducer = createReducer(null, {\n//   [fetchContacts.rejected]: (_, action) => action.payload,\n//   [fetchContacts.pending]: () => null,\n// });\n\n// export default combineReducers({\n//   items: itemsReducer,\n//   filter: filterReducer,\n//   isLoading: isLoadingReducer,\n//   error: errorReducer,\n// });\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport { filterReducer } from \"./phonebook/phonebook-reducer\";\nimport { phonebookApi } from \"service/phonebook-api\";\n\nconst middlewares = [];\nif (process.env.NODE_ENV === `development`) {\n  middlewares.push(logger);\n}\n\nexport const store = configureStore({\n  reducer: {\n    [phonebookApi.reducerPath]: phonebookApi.reducer,\n    filterReducer,\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware(),\n    phonebookApi.middleware,\n  ],\n});\n\n// ---------For Local storage----------\n\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n\n// const middleware = applyMiddleware(logger);\n\n// const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\n// const rootReducer = combineReducers({\n//   contacts: persistReducer(persistConfig, phonebookReducer),\n// });\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export const store = configureStore({\n//   reducer: {\n//     contacts: phonebookReducer,\n//   },\n//   middleware: (getDefaultMiddleware) => {\n//     return getDefaultMiddleware().concat(middlewares);\n//   },\n//   devTools: process.env.NODE_ENV === \"development\",\n// });\n\n// export default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { store } from \"./redux/store\";\n// import { store, persistor } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/es/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}